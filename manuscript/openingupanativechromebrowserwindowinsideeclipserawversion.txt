##  Opening up a native Chrome Browser window inside Eclipse (raw version) 

On the [Win32 Window's Hijack theme](http://blog.diniscruz.com/search/label/WinAPI), here is a raw version of how to show an actual Chrome browser window inside an Eclipse view (ie. a window from a C++ process inside a JVM-based Process).

Using the Groovy execution capabilities described in the [Programming Eclipse in Real-Time (using an 'Groovy based' Eclipse Plug-in)](http://blog.diniscruz.com/2013/08/programming-eclipse-in-real-time-using.html) post, in Eclipse, I start by creating an instance of a SWT panel and get its handle:  
  
[![image](images/image_thumb_25255B1_25255D1.png)](http://lh4.ggpht.com/-gtWgNIZmhSg/UjghfmN1jGI/AAAAAAAAQY0/hElQyGgwIds/s1600-h/image%25255B5%25255D.png)

After executing that script we will get an empty panel in the bottom of the screen:

[![image](images/image_thumb_25255B2_25255D.png)](http://lh3.ggpht.com/-oLnVcp3nGcU/UjghhEs--wI/AAAAAAAAQZE/IwQhQ6NGF3o/s1600-h/image%25255B8%25255D.png)

... and the **_4461984_** return value in the purple 'Groovy script output window'

[![image](images/image_thumb_25255B3_25255D1.png)](http://lh5.ggpht.com/-jB7L-3tB6sI/Ujghi-G5gdI/AAAAAAAAQZU/11dueP3ierM/s1600-h/image%25255B11%25255D.png)

... which is the handle to that Panel/View (which is where were we are going to insert our hijacked window).

In an [C# REPL UI](http://blog.diniscruz.com/p/c-repl-script-environment.html), we can now use this script (that consumes that **_4461984_** handle) to open an Cmd.exe and hijack its window into the Eclipse panel:

[![image](images/image_thumb_25255B7_25255D.png)](http://lh4.ggpht.com/-0ijVZECdtfk/UjghkB__IyI/AAAAAAAAQZk/C_hnffuBkkI/s1600-h/image%25255B23%25255D.png)

... which looks like this:

[![image](images/image_thumb_25255B8_25255D1.png)](http://lh6.ggpht.com/-JcG7dNnFXeU/UjghluJbZaI/AAAAAAAAQZ0/m5IugEFzd6Y/s1600-h/image%25255B26%25255D.png)

... in eclipse:

[![image](images/image_thumb_25255B9_25255D1.png)](http://lh3.ggpht.com/-GlU_ZtT9FK8/Ujghm4D_OOI/AAAAAAAAQaE/yrnpDht8cak/s1600-h/image%25255B29%25255D.png)

Since what we want is chrome, we can use the **_API_Chrome_Hijack_** API to:  


  1. open up a new instance of chrome, 
  2. find its dedicated process and 
  3. get that process MainWindowHandle

[![image](images/image_thumb_25255B10_25255D1.png)](http://lh6.ggpht.com/-Ps1lFT6_Y1c/UjghoaeMasI/AAAAAAAAQaU/kfcqiS00adI/s1600-h/image%25255B32%25255D.png)

... which looks like this:

[![image](images/image_thumb_25255B11_25255D.png)](http://lh4.ggpht.com/-T7F9D_DGcQ4/UjghpRBi3hI/AAAAAAAAQak/Uot0XpSbXTI/s1600-h/image%25255B35%25255D.png)

Finally here is the script that starts a new instance of chrome and insert's it into the eclipse panel:

[![image](images/image_thumb_25255B12_25255D1.png)](http://lh6.ggpht.com/-yuClrXv60Js/Ujghq-iWq8I/AAAAAAAAQa0/X5O6xfMlLsA/s1600-h/image%25255B38%25255D.png)

... which looks like this (in Eclipse)

[![image](images/image_thumb_25255B14_25255D.png)](http://lh3.ggpht.com/-eN8A2_xX42w/UjghryB_V4I/AAAAAAAAQbE/aivnBwIgq30/s1600-h/image%25255B44%25255D.png) 

Note the native Chrome window (C++ Process)  fitting nicely with the Eclipse UI (JVM Process)

[![image](images/image_thumb_25255B15_25255D1.png)](http://lh3.ggpht.com/-Mydu92aZprU/UjghtEwq0PI/AAAAAAAAQbU/jVgRJWgRbpE/s1600-h/image%25255B47%25255D.png)

Since chrome is now running inside an native Eclipse view/control, we can put it where ever we want tit to be (inside the Eclipse UI).

Like on the top right:

![image](images/image_thumb_25255B16_25255D1.png)

... on the left:

[![image](images/image_thumb_25255B17_25255D1.png)](http://lh6.ggpht.com/-o6h6gpNuBvI/Ujghu3saJ9I/AAAAAAAAQbs/0qCEdLFYnVc/s1600-h/image%25255B53%25255D.png)

... maximised

[![image](images/image_thumb_25255B18_25255D.png)](http://lh4.ggpht.com/-6kt0f8ryQGs/Ujghv1McP8I/AAAAAAAAQb8/Flk__3JCOfw/s1600-h/image%25255B56%25255D.png)

... as a detached eclipse window:

[![image](images/image_thumb_25255B19_25255D1.png)](http://lh6.ggpht.com/-JXi1FpapeNI/UjghxZzA6LI/AAAAAAAAQcM/pwNBfOHjMAM/s1600-h/image%25255B59%25255D.png)

..or in the middle (with another chrome tab opened inside the same Hijacked panel)

[![image](images/image_thumb_25255B20_25255D.png)](http://lh3.ggpht.com/-XyD5-sp2mWw/UjghymJAGzI/AAAAAAAAQcc/4uZj2uqUoBA/s1600-h/image%25255B62%25255D.png)

Here is the Groovy script that created the panel (in Eclipse)
    
    def panelView = activePage.showView("g2.scripts.views.DefaultPart_Panel");  
    return panelView.panel.handle;

  


  
Here is the C# Script that did the Handle setParent:
    
    var chromeHijack = new API_Chrome_Hijack().open_ChromeDriver();  
    var chromeHandle = chromeHijack.ChromeProcess.MainWindowHandle;

var eclipsePanel = 4461984.intPtr();

chromeHandle.setParent(eclipsePanel);

500.sleep();

chromeHandle.window_Maximized();

//O2File:API_Chrome_Hijack.cs  
//O2File:API_WinAPI.cs  
//using O2.XRules.Database.APIs  

